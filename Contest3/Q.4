/*
No of operations
Jesse loves cookies and wants the sweetness of some cookies to be greater than value . To do this, two cookies with the least sweetness are repeatedly mixed. This creates a special combined cookie with:

sweetness= 1*Least sweet cookie + 2*2nd least sweet cookie).

This occurs until all the cookies have a sweetness .

Given the sweetness of a number of cookies, determine the minimum number of operations required. If it is not possible, return .

*/


import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) {
       
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int k=sc.nextInt();
        PriorityQueue<Integer> pq=new PriorityQueue<Integer>();
        for(int i=0;i<n;i++)
            {
            pq.add(sc.nextInt());
        }
        int count=0;
        while(pq.peek()<k)
            {
            if(pq.size()>=2)
                {
            int x=pq.remove();
            int y=pq.remove();
            y=x+2*y;
            pq.add(y);
            count++;
            }
            else
                {
                count=-1;
                break;
            }
        }
        System.out.println(count);
    }
}
